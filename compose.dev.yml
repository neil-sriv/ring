services:
  api:
    command: "uvicorn ring.fast:app --log-level debug --proxy-headers --host 0.0.0.0 --port ${API_PORT} --reload"
    ports:
      - "${API_PORT}:${API_PORT}"
    expose:
      - "${API_PORT}"
    env_file:
      - ./.env
    depends_on:
      - db
    links:
      - db
    
  nginx:
    volumes:
      - ./dev.nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./localhost.crt:/etc/nginx/certs/nginx-selfsigned.crt:ro
      - ./localhost.key:/etc/nginx/certs/nginx-selfsigned.key:ro
      - ./webmanifest.json:/usr/share/nginx/html/manifest.webmanifest:ro
      - ./serviceWorker.js:/usr/share/nginx/html/serviceWorker.js:ro

  worker:
    command: "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery --app=ring.worker.celery_app worker --loglevel=debug"
    env_file:
      - ./.env
  beat:
    command: "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery --app=ring.worker.celery_app beat --loglevel=debug"
    env_file:
      - ./.env
  flower:
    command: "celery --app=ring.worker.celery_app flower"
    env_file:
      - ./.env
    ports:
      - "8003:5555"
  db:
    restart: unless-stopped
    container_name: ring-db
    image: postgres:16.1
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 8004:5432
    expose:
      - 5432
    environment:
      - POSTGRES_USER=ring-postgres
      - POSTGRES_PASSWORD=ring-postgres
      - POSTGRES_DB=ring
    profiles: ["dev"]
    networks:
      - default
    


networks:
  default:
    name: ring-network
    external: true
      

volumes:
  pgdata:
