services:
  api:
    container_name: ring-api
    build: 
      context: ./ring
      dockerfile: ring.Dockerfile
    command: "uvicorn ring.fast:app --log-level debug --host 0.0.0.0 --port ${API_PORT} --reload"
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./ring:/src/ring
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=.
      - DB_HOST=db
      - SQLALCHEMY_DATABASE_URI=postgresql://ring-postgres:ring-postgres@db:5432/ring 
    depends_on:
      - db
    links:
      - db
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: client.Dockerfile
  worker:
    build:
      context: ./ring
      dockerfile: celery.Dockerfile
    volumes:
      - ./ring:/src/ring
    command: "celery --app=ring.worker worker --loglevel=debug"
    env_file:
      - ./.env
    environment:
      - DB_PORT=8000
    depends_on:
      - redis
  beat:
    build:
      context: ./ring
      dockerfile: celery.Dockerfile
    volumes:
      - ./ring:/src/ring
    command: "celery --app=ring.worker beat --loglevel=debug"
    env_file:
      - ./.env
    depends_on:
      - redis 
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  flower:
    build:
      context: ./ring
      dockerfile: celery.Dockerfile
    volumes:
      - ./ring:/src/ring
    command: "celery --app=ring.worker flower"
    env_file:
      - ./.env
    ports:
      - "8003:5555"
    depends_on:
      - redis
      - worker
  db:
    image: postgres:16.1
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=ring-postgres
      - POSTGRES_PASSWORD=ring-postgres
      - POSTGRES_DB=ring
      

volumes:
  pgdata:
